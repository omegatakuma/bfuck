#!/usr/local/bin/gosh
(use srfi-1)
(use file.util)
(define (inter lst mem n)
  (let loop ((lst lst))
    (if (null? lst)
      (values n mem)
      (begin
        (if (list? (car lst))
            (until (zero? (vector-ref mem n))
                (loop (car lst)))
			(case (car lst)
            ((#\+)(inc! (vector-ref mem n)))
            ((#\-)(dec! (vector-ref mem n)))
            ((#\<)(dec! n))
            ((#\>)(inc! n))
            ((#\.)(write-byte (vector-ref mem n)) (flush))
            ((#\,)(set! (vector-ref mem n)(read-byte (current-input-port))))))
        (loop (cdr lst))))))
(define (parse lst)
  (let loop ((lst lst)(result '()))
    (if (null? lst)
      (reverse result)
      (case (car lst)
        ((#\+ #\- #\. #\> #\< #\,)(loop (cdr lst) (cons (car lst) result)))
        ((#\[)(loop (let1 rec (drop-while (lambda(x)(not(equal? x #\]))) lst)
                          (if (null? rec)
                            '()
                            (cdr rec)))
                    (cons (loop (cdr lst) '()) result)))
      ((#\])(reverse result))
      (else (loop (cdr lst) result))))))
(define (main args)
  (if (null? (cdr args))
    (error "[file]")
    (let1 mem (make-vector 1024 0)
          (inter (parse (string->list (file->string (cadr args)))) mem 0))))
